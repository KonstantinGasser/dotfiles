set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
# this has potential for cool things!
# set -g @plugin 'omerxx/tmux-floax'

bind r source-file ~/dotfiles/tmux/tmux.conf

# change the prefix key
unbind C-b
set -g prefix C-u
bind-key C-Space send-prefix

# status line
set -g status on
set -g status-interval 1
set -g status-style bg=default,fg=white
set -g status-left ""
set -g status-right "#[fg=blue][#S] #[fg=white]| #[fg=yellow]%d %b %Y %I:%M:%S %p "
# set -g status-justify centre 

# start windows and panes index at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# window indications (vertical/horizontal bar between panes)
set -g window-status-format "#[fg=white,dim,bg=default] #I: #W "
set -g window-status-current-format "#[fg=yellow,bg=black,bold] #I: #W "
set -g window-status-separator " | "

# pane border
set -g pane-border-style fg=grey
set -g pane-active-border-style fg=cyan

# random configs
set -g mouse on
set-option -sa terminal-overrides ",xterm*:Tc"

# nativ tmux configurations
setw -g automatic-rename 'on'

# split window vertically
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# split window horizontally
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
# TODO: '-' is not binding - not listed in list-key.
# would be nice to get fixed thou
# bind - split-window -v -c "#{pane_current_path}"

# tmux - vim navigation
set -g @vim_navigator_mapping_left "C-Left C-h"  # use C-h and C-Left
set -g @vim_navigator_mapping_right "C-Right C-l"
set -g @vim_navigator_mapping_up "C-k"
set -g @vim_navigator_mapping_down "C-j"
set -g @vim_navigator_mapping_prev ""  # removes the C-\ binding

# pane resizing
bind -r < resize-pane -L 15
bind -r > resize-pane -R 15
bind -r + resize-pane -U 15
bind -r - resize-pane -D 15

# Ensure window index numbers get reordered on delete.
set-option -g renumber-windows on

# enable vi bindings
set-window-option -g mode-keys vi

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# if keyboard 60% w/o arrow keys...just vim-it.
# enables access of previous shell command by C-p
# enables access of next shell command by C-n
# enables completion by C-y
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^(.*vim.*|.*nvim.*)$'"
bind -n C-y if-shell "$is_vim" "send-keys C-y" "send-keys Right"
bind -n C-p if-shell "$is_vim" "send-keys C-p" "send-keys Up"
bind -n C-n if-shell "$is_vim" "send-keys C-n" "send-keys Down"


bind-key -r f run-shell "~/dotfiles/tmux/scripts/sessionizer"
bind-key -r s popup -E -b rounded -h 80% -w 80% -y C "nvim ~/personal/ideas/ideas.md"
bind-key -r a display-popup -b rounded -E -h 80% -w 80% -y C "~/dotfiles/tmux/scripts/todos"

run '~/dotfiles/tmux/plugins/tpm/tpm'
